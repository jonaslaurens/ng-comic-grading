// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "~@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ng-grading-primary: mat.define-palette(mat.$indigo-palette);
$ng-grading-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ng-grading-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ng-grading-theme: mat.define-light-theme(
  (
    color: (
      primary: $ng-grading-primary,
      accent: $ng-grading-accent,
      warn: $ng-grading-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($ng-grading-theme);

/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Open+Sans+Condensed:wght@300&family=Open+Sans:wght@300;700&display=swap");

@import url("./styles/typography.scss");

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: "Open Sans", "Helvetica Neue", sans-serif;
}

:root {
  --black: #141414;
  --blackHover: #313131;
  --white: #ffffff;
  --grey: #e3e3e4;
  --accent: #d8bd14;
  --accentHover: #aa9514;
  --green: #73d13d;
}

* {
  box-sizing: border-box;
  margin: 0;
}

body {
  background-color: var(--white);
  width: 100%;
}

hr {
  width: 100%;
  height: 2px;
  background: var(--grey);
  border: none;
  margin: 15px auto;
}

button {
  border: 1px solid;
  padding: 10px 15px;
}

/* overrides */
.cga-button {
  background-color: var(--accent) !important;
  border-color: var(--accent) !important;
  color: var(--black) !important;

  &:hover,
  &:focus {
    background-color: var(--accentHover) !important;
    border-color: var(--accentHover) !important;
  }
}

.cga-button_outline {
  background-color: transparent !important;
  border-color: var(--accent) !important;
  color: var(--black) !important;

  &:hover,
  &:focus {
    background-color: var(--accentHover) !important;
    color: var(--black) !important;
  }
}

.MuiLinearProgress-barColorPrimary {
  background-color: var(--accent) !important;
}

.progressbar {
  margin-top: 30px;
}

.selected p {
  border-bottom: solid 8px var(--accent);
}
